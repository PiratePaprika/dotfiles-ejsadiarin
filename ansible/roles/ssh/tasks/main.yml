---
- name: SSH | Ensure .ssh directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.ssh"
    state: directory
    mode: "0700"

- name: SSH | Configure SSH keys
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.ssh/{{ ssh_key_item.key }}"
    content: "{{ ssh_key_item.value }}"
    mode: "0600"
  no_log: true
  loop: "{{ ssh_keys | dict2items }}"
  loop_control:
    loop_var: ssh_key_item

- name: SSH | start ssh-agent
  ansible.builtin.shell: |
    eval "$(ssh-agent -s)"
  args:
    executable: /bin/bash

- name: SSH | add private key to ssh-agent
  ansible.builtin.shell: |
    ssh-add "{{ ansible_user_dir }}/.ssh/id_ed25519"
  args:
    executable: /bin/bash
  ignore_errors: true

# - name: SSH | Check if ssh config exists
#   ansible.builtin.stat:
#     path: "{{ ansible_user_dir }}/.ssh/config"
#   register: ssh_config_stat
#
# - name: SSH | Create ssh config if it doesn't exist
#   ansible.builtin.copy:
#     dest: "{{ ansible_user_dir }}/.ssh/config"
#     content: |
#       # SSH Config managed by Ansible
#       Host *
#         ServerAliveInterval 60
#         ServerAliveCountMax 3
#         ControlMaster auto
#         ControlPersist 5m
#         ControlPath ~/.ssh/sockets/%r@%h-%p
#         AddKeysToAgent yes
#     mode: "0600"
#   when: not ssh_config_stat.stat.exists
#
# - name: SSH | Ensure ssh sockets directory exists
#   ansible.builtin.file:
#     path: "{{ ansible_user_dir }}/.ssh/sockets"
#     state: directory
#     mode: "0700"
