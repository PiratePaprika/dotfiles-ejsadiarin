echo "hello im z0mbi3"
neofetch
pacman -Syu
sudo pacman -Syu
lsa
ll
vim .
nvim .
setxkbmap
pacman -Q
clear
xprop | grep WM_CLASS
neofetch
man picom
nvim .
lsa
.config
rm -rf nvim
nvim
git clone https://github.com/LazyVim/starter ~/.config/nvim
rm -rf ~/.config/nvim/.git
nvim
nvim .
nvim
nvim .
lsa
ll
ls -a
cd .config
nvim .
sudo pacman -S neovim
nvim
zsh
nvim .config/bspwm
sudo pacman -S spotify
sudo pacman -S spotify-launcher
c
pacman --help
sudo pacman -R spotify-launcher
paru -S spotify
pacman --help
sudo pacman -Syu
sudo pacman -S flatpak
echo $XDG_CURRENT_DESKTOP
printenv
sudo pacman -S spotify-launcher
lsa
nvim .config/bspwm
man picom
neofetch
cl
clear
neofetch
neofetch
neofetch
clear
claer
clear
neofetch
mkdir nightTab
cd nightTab
touch clean.json
nvim .
acpi
htop
.cache
nvim .
pacman -Q
sudo pacman -S cava
yay -S cava
cava
acpi
paru -S discord
nvim .config/bspwm
nvim .
neofetch
acpi
apcu
acpu
acpi
paru
neofetfch
neofetch
nvim
nvim .
neofetch
lsa
neofetfch
neofetch
nvim .
neofetch
df -h
neofetch
nvim .
nvim
nvim .
nvim
sudo pacman -S npm
npm -v
nvim .
nvim
nvim .
neofetch
sudo pacman -S mpd
neofetch
man polybar
acpu
aac
aci
ac[i
acpi
curl -sf "api.openweathermap.org/data/2.5/weather?lat=14.6042&lon=120.9822&appid=8b05d62206f459e1d298cbe5844d7d87&units=metric\
\
"
curl https://api.openweathermap.org/data/2.5/weather?lat={14.6042}&lon={120.9822}&appid={f6895149a8af070f179cb13da1a5632a}
man curl
curl -sf https://api.openweathermap.org/data/2.5/weather?lat={14.6042}&lon={120.9822}&appid={f6895149a8af070f179cb13da1a5632a}
curl https://api.openweathermap.org/data/2.5/weather?lat=14.6042&lon=120.9822&appid=f6895149a8af070f179cb13da1a5632a
curl -sf api.openweathermap.org/data/2.5/weather?lat=14.6042&lon=120.9822&appid=f6895149a8af070f179cb13da1a5632a
..
nvim .
acpi
nvim .
acpi
nvim .
neofetch
xprop | grep WM_CLASS
xprop
xprop | grep WM_CLASS
neofethc
neofetch
nvim .
playerctl
python --v
python --version
sudo pacman -S pip
sudo pacman -S python-pip
pip install dbus-python
cd .config
cd bspwm
cd rices
cd exquisite
cd sc
cd scripts
pip install dbus-python
python -v
python -v
python --version
sudo pacman -S python
nvim .
git clone https://github.com/polybar/polybar-scripts.git
cava
neofetch
neo\

neofetch
nvim
neofetch
pacman -Q
nvim .
git clone https://github.com/iSparsh/gross.git
nvim .
cd .config
cd bspwm
cd rices
cd exquisite
cd widgets
 pwd
mv ./WidgetLaunchers /.config/bspwm/rices/exquisite/eww
mv ./WidgetLaunchers ~/.config/bspwm/rices/exquisite/eww/
cd eww-widgets
cd eww
where
mv ~/eww-widgets/eww ~/.config/bspwm/rices/exquisite/
nvim .
echo $XDG_CURRENT_DESKTOP
printenv
mpc current
mpc
man eww
pacman -Q
nvim
sudo pacman -S eww
cd .config
git clone https://github.com/elkowar/eww\

cd eww
cargo build --release --no-default-features --features x11\

cd target/release
eww 
chmod +x ./eww\

..
cd target/release
cd eww
cd target/release
chmod +x ./eww\

./eww daemon
./eww
./eww daemon
nvim .
cd eww
cd target/release
./eww daemon
./eww
./eww daemon -c ~/.config/bspwm/rices/exquisite/widgets
.config
eww
cd eww
nvim
.local
cd bin
echo $PATH
eww 
ewwcm --help
cd .config
mkdir eww
cd eww
cd .config
cd bspwm
cd r
cd rices
cd exquisite
mv ./eww-widgets/ ~/.config/eww
eww
cd target/release
./eww daemon -c ~/.config/bspwm/rices/exquisite/widgets
nvim
cd eww
cd target/release
eww --help
eww
./eww
./eww state
./eww daemon
./eww window
./eww windows
./eww open calendar
./eww close calendar
./eww open quicksettings
./eww close
./eww close quicksettings
./eww open musicplayer
./eww close musicplayer
./eww open appbar
./eww close appbar
./eww open sys
./eww close sys
./eww daemon -c ~/.config/bspwm/rices/exquisite/widgets
./eww kill
./eww daemon -c ~/.config/bspwm/rices/exquisite/widgets
./eww
./eww windows
./eww daemon -c ~/.config/bspwm/rices/exquisite/widgets
./eww open launchermenu
./eww kill
./eww kill daemon
./eww kill --help
./eww kill ~/.config/eww
./eww kill -c ~/.config/eww
./eww daemon -c ~/.config/bspwm/rices/exquisite/widgets
./eww windows
eww
cd target/release
./eww daemon
./eww open launchermenu
./eww windows
./eww open music
./eww close music
./eww clsoe launchermenu
./eww close launchermenu
./eww open powermenu
./eww close powermenu
nvim
rm -rf eww
paru -S eww
curl -sS https://github.com/elkowar.gpg | gpg --import -i -\
curl -sS https://github.com/web-flow.gpg | gpg --import -i -
paru -S eww-x11
eww --help
eww windwos
eww windows
eww open calendar
eww close calendar
eww open music
eww close music
eww open powermenu
eww close powermenu
eww open launchermenu
eww close launchermenu
eww daemon
eww windows
neofetch
sudo pacman -S dotnet-runtime dotnet-sdk aspnet-runtime
dotnet
dotnet -
dotnet -v
dotnet --info
ll
lsa
lsd
lsd -a
lsa
neofetch
lsa
lsd
neofetch
dotnet tool install --global dotnet-ef
dotnet-ef
man alacritty
alacritty -h
dotnet ef
lsa
touch README.md
nvim README.md
git --version
git -h
git config --user.name "ejsadiarin"
git config --global user.name "ejsadiarin"
git config user.name
git config --global user.email "ejsadiarin@gmail.com"
git config user.email
ssh-keygen -t ed25519 -C "ejsadiarin@gmail.com"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
cat ~/.ssh/id_ed25519.pub
ssh -T git@github.com
nvim README.md
dotnet ef
paru -S visual-studio-code
paru -S visual-studio-code-bin
code
paru -S jetbrains-toolbox
df -h
git --version
nvim README.md
cmatrix
neofetch
cava
xprop
neofetch
neofetch
nvim
nvim .config
neofetch
cava
neofetch
sudo pacman -S cmatrix
lsa
cd .config
lsa
neofetch
nneofetch
neoefetch
neofetch
cd .local/bin
nvim .
nvim
cava
sudo pacman -S ripgrep
firefox --version
nvim
set termguicolors
man set
neofetch
printf "\x1b[38;2;255;100;0mTRUECOLOR\x1b[0m\n"
nvim
nvim .
nvim
nvim .
nvim
mkdir main
cd amin
main
git clone git@github.com:ejsadiarin/exercise-tracker-app.git
cd .local/bin
acpi
nvim .local/bin
cd .local
cd share
nvim .
..
nvim .
nvim .
nvim .mozilla
nvim
nvim .
nvim
code
ld
dotnet build "/home/exquisite/main/exercise-tracker-app/backend/ExerciseTracker.API/ExerciseTracker.API.sln"
nvim .
neofetch
ne
nvim .
neofetch
ne
nvim .
htop
nvim .local
uname -r
ne
nvim .local/bin
nvim
nvim .zshrc
re
nvim .zshrc
re
nvim .zshrc
rxfetch
nvim .zshrc
rxfetch
nvim .zshrc
ne
lsa
lsd
cd .local/share/applications/asciiart/
cd .local/share/asciiart
./zfetch
ll
chmod +x ./rxfetch
./rxfetch
./zfetch
./rxfetch
./zfetch
./rxfetch
./zfetch
./rxfetch
./zfetch
./rxfetch
OpenApps --rxfetch
alacritty -h
OpenApps --rxfetch
ne
rxfetch
ne
echo $PATH
re
ne
neofetch
ne
nvim .
nvim
nvim .
paru -S zoom
htop
nvim .
lsa
nvim .
reflector --protocol https --verbose --latest 25 --sort rate --save /etc/pacman.d/mirrorlist\

sudo reflector --protocol https --verbose --latest 25 --sort rate --save /etc/pacman.d/mirrorlist\

eos-rankmirrors --verbose
paru
eos-rankmirrors --verbose
paru
yay
paru
paccache -ruk0
pacman -Rns $(pacman -Qdtq)\

sudo pacman -Rns $(pacman -Qdtq)\

pacman -h
pacman -S --needed base-devel
sudo pacman -S --needed base-devel
yay -h
re
nvim
nvim .
pacman -Q
git clone https://github.com/AdnanHodzic/auto-cpufreq.git
lsa
cd auto-cpufreq
sudo ./auto-cpufreq-installer
systemctl status auto-cpufreq
sudo auto-cpufreq --install
systemctl status auto-cpufreq
auto-cpufreq --stats
acpi
auto-cpufreq
auto-cpufreq --stats
acpi
auto-cpufreq --stats
acpi
nvim
auto-cpufreq --stats
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
htop
auto-cpufreq --stats
lsa
auto-cpufreq --stats
cd main
cd exercise-tracker-app
htop
top
ne
re
ne
re
ne
se
re
ne
nm-applet
echo $PATH
dex -h
eww -h
nvim .
re
bluetoothctl
nvim .
nvim
nm-applet --indicator
acpi
apci
acpi
auto-cpufreq --stats
lsa
ll
lsa
nvim .
ne
powertop
brightnessctl
nvim /etc/
sudo nvim /etc/
..
cd etc
touch auto-cpufreq.conf
sudo touch auto-cpufreq.conf
sudo nvim .
paru
yay
nvim .
..
cd var
cd db
..
nvim .
sudo pacman -S postgresql
postgres
pacman -Q
initdb --locale=C.UTF-8 --encoding=UTF8 -D /var/lib/postgres/data --data-checksums
sudo initdb --locale=C.UTF-8 --encoding=UTF8 -D /var/lib/postgres/data --data-checksums
su
su -l postgres
sudo -iu postgres
systemctl start postgresql.service
systemctl enable postgresql.service
sudo -iu postgres
acpi
sudo -iu postgres
nvim .
sudo -iu postgres
cd API
git add .
git commit -m "Repository pattern, added models and interface service"
sudo pacman -S pgadmin4
pgadmin4
sudo pacman -R pgadmin4
sudo pacman -S pgadmin4
printenv
echo $BROWSER
$BROWSER
sudo pacman -S docker
sudo pacman -R pgadmin4
lsa
nvim .
pgadmin4 -h
pgadmin4
pgadmin4 --help
paru -S phppgadmin
sudo nvim /etc/
sudo pacman -R phppgadmin
df -h
lsa
sudo pacman -S nodejs yarn
lsa
$ python3 -m venv venv
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
PATH=$PATH:/usr/local/pgsql/bin pip install -r $PGADMIN4_SRC/requirements.txt
PATH=$PATH:/usr/local/pgsql/bin pip install -r requirements.txt
printenv
PATH=$PATH:/usr/local/pgsql/bin pip install -r requirements.txt
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
PATH=$PATH:/usr/local/pgsql/bin pip install -r $PGADMIN4_SRC/requirements.txt
PATH=$PATH:/usr/local/pgsql/bin pip install -r requirements.txt
cd Downloads
cd pgadmin4-7.5
PATH=$PATH:/usr/local/pgsql/bin pip install -r requirements.txt
pip install -r web/regression/requirements.txt
vim web/config_local.py
python3 web/pgAdmin4/py
cd web
sudo python3 pgAdmin4.py
sudo pacman -S dbeaver
sudo pacman -S sqlite
sudo -iu postgres
sudo
sudo -iu postgres
git add .
git commit -m "Added DbContext and Connection String, not dockerized yet for prod"
git push origin main
docker info
systemctl start docker
docker info
sudo systemctl start docker
docker info
sudo systemctl enable docker
docker info
sudo systemctl enable docker.service
sudo systemctl start docker.service
docker info
docker pull archlinux
docker images
sudo systemctl docker restart
groups
sudo docker ps -a
sudo docker images
systemctl status docker
sudo docker run hello-world
paru -S docker-desktop
pass
gpg --generate-key
gpg --edit-key 2C71BBB31F6E768C1018414FBB2E1EC93CE64603
pass init 2C71BBB31F6E768C1018414FBB2E1EC93CE64603
docker info
grep CONFIG_SECCOMP= /boot/config-$(uname -r)
pacman -Q
sudo pacman -S docker-compose
groups
lsa
nvim .
git add .
git commit -m "Some service"
git push origin main
echo $USER
sudo usermod -aG docker $USER
groups
docker ps
docker-compose
docker-compose ps
docker-compose ls
lsa
..
cd dev
lsa
..
mkdir devenv
cd devenv
docker-compose ps
docker ps
nvim .
..
cd var
cd lib
cd docker
sudo cd docker
docker ps
docker-compose ps
nvim 
nvim
systemctl status containerd.service
history -a
history -h
which history
where history
lsa
nvim .
mkdir dotfiles
mv README.md ~/dotfiles/
cd dotfiles
cd dots-ricegh
cd home
..
cd config
cd dotfiles
groups
docker ps
docker ls
docker ps
docker-compose ps
nvim .
vim .
nvim .
vim .
nvim .
nvim dotfiles
mv ~/dotfiles/README.md ~
