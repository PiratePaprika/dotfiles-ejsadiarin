# set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
# set-option -sa terminal-overrides ",xterm*:Tc"
# set-option -sa terminal-features ',:RGB'
# set -g default-terminal "xterm-256color"
# if-shell -b '[ "$(echo $TERM)" = "xterm-kitty" ]' {
#   set -g default-terminal "xterm-kitty"
# }
set -sg terminal-features ",*:RGB" # if didn't work try (by tmux-sensible): set -g default-terminal "screen-256color"
set -g mouse on

unbind C-b
set -g prefix M-Space
bind M-Space send-prefix

# Switch sessions fast
# bind -n M-( switch-client -p
# bind -n M-) switch-client -n

# Launch lazygit in a new popup window
# bind -n M-g display-popup -d "#{pane_current_path}" -w 90% -h 80% -B -E 'lazygit' 

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Alt-Tab to switch windows fast (window level switch, less mental overhead)
bind -n M-Tab last-window

# Switch to last previous client/session fast
bind -n M-w switch-client -l

# Alt-{p,n} keys to switch windows (window level switch, less mental overhead)
bind -n M-n previous-window # go to right (>) adjacent window
bind -n M-p next-window # go to left (<) adjacent window

# Pane selection (with alt + {h,j,k,l})
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-Shift-{h,j,k,l} keys without prefix key to resize panes
bind -n M-H resize-pane -L 2
bind -n M-L resize-pane -R 2
bind -n M-K resize-pane -U 2
bind -n M-J resize-pane -D 2

# Skip "Kill pane?" message
bind-key x kill-pane
bind-key -n M-x kill-pane
bind-key -n M-q kill-pane

# Prefix + a to cycle through panes (and zooming them) - idk if i need
bind -r a select-pane -t .+1 \; resize-pane -Z

# Config 1:
# TODO: gruvbox theme in catppuccin config layout
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#{pane_current_path}"
set -g @catppuccin_window_current_text "#W"
# set -g @catppuccin_window_current_color "color" # text color
# set -g @catppuccin_window_current_background "color"

# set -g @catppuccin_date_time "%Y-%m-%d %H:%M %X"

set -g @catppuccin_status_modules_right "application session user date_time"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'

run '~/.tmux/plugins/tpm/tpm'

# set vi-mode
set-window-option -g mode-keys vi

# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -n M-[ copy-mode

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l


# Open panes like BSPWM in current directory (cwd)
bind _ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind Enter run-shell ~/.tmux/scripts/split
bind -n M-t run-shell ~/.tmux/scripts/split
bind -r -n M-f run-shell "tmux neww ~/.tmux/scripts/tmux-sessionizer"
bind -r -n M-s run-shell "tmux neww ~/.tmux/scripts/tmux-active-sessions"

####### tmux-sensible enabled options: #######

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
# set -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
# set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
# set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
# set -g status-interval 5

# (OS X) Fix pbcopy/pbpaste for old tmux versions (pre 2.6)
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# Upgrade $TERM
# set -g default-terminal "screen-256color"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
# set -g status-keys emacs

# Focus events enabled for terminals that support them
# set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
# setw -g aggressive-resize on

# Easier and faster switching between next/prev window
# bind C-p previous-window
# bind C-n next-window

# Source .tmux.conf as suggested in `man tmux`
# bind R source-file '~/.tmux.conf'

# If prefix is 'C-a'
# bind C-a send-prefix
# bind a last-window

##########################################
