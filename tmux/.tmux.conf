# set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
# set-option -sa terminal-overrides ",xterm*:Tc"
# set-option -sa terminal-features ',:RGB'
# set -g default-terminal "xterm-256color"
# if-shell -b '[ "$(echo $TERM)" = "xterm-kitty" ]' {
#   set -g default-terminal "xterm-kitty"
# }
set -sg terminal-features ",*:RGB" # if didn't work try (by tmux-sensible): set -g default-terminal "screen-256color"
set -g mouse on

unbind C-b
set -g prefix M-Space
bind M-Space send-prefix

# Switch sessions fast
# bind -n M-( switch-client -p
# bind -n M-) switch-client -n

# Launch lazygit in a new popup window
# bind -n M-g display-popup -d "#{pane_current_path}" -w 90% -h 80% -B -E 'lazygit' 

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Alt-Tab to switch windows fast (window level switch, less mental overhead)
bind -n M-Tab last-window
bind -n C-Tab last-window

# Switch to last previous client/session fast
bind -n M-w switch-client -l

# Alt-{p,n} keys to switch windows (window level switch, less mental overhead)
bind -n M-n previous-window # go to right (>) adjacent window
bind -n M-p next-window # go to left (<) adjacent window

# Pane selection (with alt + {h,j,k,l})
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-Shift-{h,j,k,l} keys without prefix key to resize panes
bind -n M-H resize-pane -L 2
bind -n M-L resize-pane -R 2
bind -n M-K resize-pane -U 2
bind -n M-J resize-pane -D 2

# tmux-safe-kill-pane, spawn confirmation message before killing the LAST pane
bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind -n M-x run-shell ~/.tmux/scripts/tmux-safe-kill-pane
bind -n M-q run-shell ~/.tmux/scripts/tmux-safe-kill-pane

# Refresh tmux config (FIX: doesn't work yet idk maybe bc of symlinked?)
# bind -n M-r source-file '~/.tmux.conf'

# Prefix + a to cycle through panes (and zooming them) - idk if i need
bind -r a select-pane -t .+1 \; resize-pane -Z

# Open panes like BSPWM in current directory (cwd)
bind _ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind Enter run-shell ~/.tmux/scripts/split
bind -n M-t run-shell ~/.tmux/scripts/split
bind -r -n M-f run-shell "tmux neww ~/.tmux/scripts/tmux-sessionizer"
bind -r -n M-s run-shell "tmux neww ~/.tmux/scripts/tmux-active-sessions"

#####################
#    COLORSCHEME    #
#####################
set -g @catppuccin_flavour 'mocha' # latte,frappe, macchiato or mocha
# DEFAULT mocha for reference:
# rosewater = "#f5e0dc",
# flamingo = "#f2cdcd",
# pink = "#f5c2e7",
# mauve = "#cba6f7",
# red = "#f38ba8",
# maroon = "#eba0ac",
# peach = "#fab387",
# yellow = "#f9e2af",
# green = "#a6e3a1",
# teal = "#94e2d5",
# sky = "#89dceb",
# sapphire = "#74c7ec",
# blue = "#89b4fa",
# lavender = "#b4befe",
# text = "#cdd6f4",
# subtext1 = "#bac2de",
# subtext0 = "#a6adc8",
# overlay2 = "#9399b2",
# overlay1 = "#7f849c",
# overlay0 = "#6c7086",
# surface2 = "#585b70",
# surface1 = "#45475a",
# surface0 = "#313244",
# base = "#1e1e2e",
# mantle = "#181825",
# crust = "#11111b",

set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "

set -g @catppuccin_window_default_fill "all"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_default_color "#181825" # bg color idk why
set -g @catppuccin_window_default_background "#585b70" # text color idk why alternative

set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_window_current_text "#W"
set -g @catppuccin_window_current_color "#f9e2af" # bg color idk why
set -g @catppuccin_window_current_background "#181825" # text color idk why alternative

set -g @catppuccin_date_time_text "%Y-%b-%d %I:%M%p" # "%Y-%m-%d %H:%M %X" or "%B %d, %H:%M %X"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_modules_right "date_time"
set -g @catppuccin_status_justify "absolute-centre" # centre, left, right, absolute-centre
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_middle_separator ""
set -g @catppuccin_status_fill ""
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_menu_style "default" # Use a value compatible with the standard tmux `menu-style`
set -g @catppuccin_status_default "on"
set -g @catppuccin_status_background "#181825" # theme, default (transparent), or hex color

#################
#    PLUGINS    #
#################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'

run '~/.tmux/plugins/tpm/tpm'

# set vi-mode
set-window-option -g mode-keys vi

# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -n M-[ copy-mode

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
